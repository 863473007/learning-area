<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/jms
       http://www.springframework.org/schema/jms/spring-jms.xsd
       http://activemq.apache.org/schema/core
       http://activemq.apache.org/schema/core/activemq-core.xsd">

    <!--  第一步， 创建连接工厂给  -->
    <!-- 创建连接工厂
         使用默认的ip和端口
    -->
    <!--<bean id="connectionFactory" class="org.apache.activemq.spring.ActiveMQConnectionFactory"/>-->
    <!--<bean id="connectionFactory" class="org.apache.activemq.spring.ActiveMQConnectionFactory" -->
          <!--p:brokerURL="tcp://localhost:61616"/>-->
    <!--
        创建工厂， 使用amq元素
    -->
    <amq:connectionFactory id="connectionFactory" brokerURL="tcp://localhost:61616" trustAllPackages="true"/>

    <!-- 声明ActiveMQ消息目的地-->
    <!--声明一个ActiveMQ队列-->
    <!-- 声明队列，方法一： -->
    <bean id="queue" class="org.apache.activemq.command.ActiveMQQueue" c:name="spitter.queue"/>
    <!-- 声明队列， 方法二： 借助physicalName属性指定消息通道名称 -->
    <amq:queue id="spitterQueue" physicalName="spitter.alert.queue"/>


    <!--声明一个ActiveMQ主题-->
    <!-- 声明一个主题，方法一： -->
    <bean id="topic" class="org.apache.activemq.command.ActiveMQTopic" c:name="spitter.topic"/>
    <!-- 声明一个主题，方法二： -->
    <!--<amq:topic id="spitterTopic" physicalName="spitter.alert.topic"/>-->

    <!---->
    <!--<bean id="messageConverter" class="org.springframework.jms.support.converter.MappingJackson2MessageConverter"/>-->

    <bean class="config.SpringActiveMQConfig"/>
    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate"
            c:connectionFactory-ref="connectionFactory"
            p:defaultDestination-ref="topic"
            p:messageConverter-ref="messageConverter"/>


    <!-- 练习第三部分： 创建消息驱动的POJO-->
    <!--第一步： 将处理器声明为bean-->
    <bean id="spitterAlertAsychronizationHandler" class="com.hef.spittr.service.impl.SpitterAlertAsychronizationHandlerImpl"/>
    <!--第二步： 将SpitterAlertAsychronizationHandlerImpl 转变为消息驱动的POJO-->
    <jms:listener-container>
        <jms:listener destination="spitter.alert.queue" ref="spitterAlertAsychronizationHandler" method="handleSpittleAlert"/>
    </jms:listener-container>


</beans>